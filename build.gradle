import org.gradle.api.tasks.application.CreateStartScripts

plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.15'
    id 'application'
}

group 'pt.up.fc.dcc.ssd'
version '1.0'

repositories {
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.36.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main.java {
        srcDirs 'build/generated/source/proto/main/grpc'
        srcDirs 'build/generated/source/proto/main/java'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation 'io.grpc:grpc-netty-shaded:1.36.0'
    implementation 'io.grpc:grpc-protobuf:1.36.0'
    implementation 'io.grpc:grpc-stub:1.36.0'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.68'
}

test {
    useJUnitPlatform()
}

startScripts.enabled = false

task minerNode(type: CreateStartScripts) {
    mainClassName = 'pt.up.fc.dcc.ssd.blockchain.Miner'
    applicationName = 'miner-node'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task clientNode(type: CreateStartScripts) {
    mainClassName = 'pt.up.fc.dcc.ssd.auction.Client'
    applicationName = 'client-node'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task bootstrapNode(type: CreateStartScripts) {
    mainClassName = 'pt.up.fc.dcc.ssd.p2p.Bootstrap'
    applicationName = 'bootstrap-node'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(bootstrapNode)
    from(clientNode)
    from(minerNode)
    fileMode = 0755
}